enum roles {
  Developer
  Mentor
  Admin
}

type User {
  id: ID! @id
  firstName: String!
  lastName: String!
  role: roles @default(value: Developer)
  email: String @unique
  mobileNumber: String @unique
  githubHandle: String! @unique
  password: String
  isVerified: Boolean @default(value:false)
  session: String
}

type Mentor {
  id: ID! @id
  user: User! @relation(link: INLINE, onDelete: CASCADE)
  organization: Organization! @relation(link: INLINE, onDelete: CASCADE)
}

type Proposal {
  id: ID! @id
  user: User! @relation(link: INLINE, onDelete: CASCADE)
  project: Project! @relation(link: INLINE, onDelete: CASCADE)
  isAccepted: Boolean! @default(value: false)
  propUrl: String!
}

type Project {
  id: ID! @id
  organization: Organization! @relation(link: INLINE, onDelete: CASCADE)
  projName: String!
  projSlug: String! @unique
  projDesc: String
  githubUrl: String
  projMinDesc: String
}

type Organization {
  id: ID! @id
  orgName: String!
  orgSlug: String! @unique
  orgDesc: String
  githubUrl: String @unique
}

type Event {
  id: ID! @id
  date: DateTime!
  eventDesc: String!
}
